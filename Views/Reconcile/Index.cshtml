@using System.Activities.Statements
@using System.Globalization
@using System.Runtime.Versioning
@using VinEcom.Invoices.Web.Controllers
@using VinEcom.Invoices.Web.Models
@model List<VinEcom.Invoices.Web.Models.Reconcile>
@{
    ViewBag.Title = "Reconcile Management";
    var listChecked = new List<string>();
    if (Session["list"] != null)
    {
        listChecked = new ReconcileController().BuidArrayFromString(Session["list"].ToString());
    }
    int pageIndex;
    int.TryParse(Request.QueryString["pageIndex"], out pageIndex);
    if (pageIndex == 0)
    {
        pageIndex = 1;
    }
    //load reconcile filter
    if (ViewBag.ReconcileFilter != null)
    {
        var filter = ViewBag.ReconcileFilter as ReconcileFilter;
        if (filter != null)
        {
            ViewBag.fromDate = filter.fromDate;
            ViewBag.toDate = filter.toDate;
            ViewBag.orderNos = filter.orderNos;
            ViewBag.customerIds = filter.customerIds;
            ViewBag.merchantIds = filter.merchantIds;
            ViewBag.columnfilter = filter.columnfilter;
            ViewBag.orderbycolumn = filter.orderbycolumn;
            ViewBag.optionorder = filter.optionorder;
            ViewBag.mathfilter = filter.mathfilter;
            ViewBag.keyword = filter.keyword;
        }
    }
}
<div class="bg-danger">@Html.Raw(ViewBag.DebugQuery)</div>
<div class="well">
    <form action="@Url.Action("Index", "Reconcile")">
        <input type="hidden" id="columnfilter" name="columnfilter" value="@ViewBag.columnfilter" />
        <input type="hidden" id="orderbycolumn" name="orderbycolumn" value="@ViewBag.orderbycolumn" />
        <input type="hidden" id="optionorder" name="optionorder" value="@ViewBag.optionorder" />
        <input type="hidden" id="mathfilter" name="mathfilter" value="@ViewBag.mathfilter" />
        <input type="hidden" id="keyword" name="keyword" value="@ViewBag.keyword" />
        <div class="row" style="margin-bottom: 10px; padding: 0">
            <div class="col-md-3">
                <span class="glyphicon glyphicon-tags"></span> <span>Mã đơn hàng</span>
                <input data-role="tagsinput" value="@ViewBag.orderNos" name="orderNos" id="orderNos" type="text" class="form-control" />
            </div>
            <div class="col-md-3">
            </div>
            <div class="col-md-1">
            </div>
            <div class="col-md-3">
            </div>
        </div>
        <div class="row" style="margin-bottom: 10px; padding: 0">
            <div class="col-md-3">
                <span class="glyphicon glyphicon-tags"></span> <span>Mã nhà cung cấp</span>
                <input value="@ViewBag.merchantIds" name="merchantIds" type="text" class="form-control" />
            </div>
            <div class="col-md-3">
            </div>
            <div class="col-md-1">
            </div>
            <div class="col-md-3">
            </div>
        </div>
        <div class="row" style="margin-bottom: 10px; padding: 0">
            <div class="col-md-3">
                <span class="glyphicon glyphicon-tags"></span> <span>Mã khách hàng</span>
                <input value="@ViewBag.customerIds" name="customerIds" type="text" class="form-control" />
            </div>
            <div class="col-md-3">
            </div>
            <div class="col-md-1">
            </div>
            <div class="col-md-3">
            </div>
        </div>
        <div class="row" style="margin-bottom: 10px; padding: 0">
            <div class="col-md-3">
                <div class="input-group date" id="datetimepickerfrom">
                    <input value="@ViewBag.fromDate" name="fromDate" placeholder="Từ ngày" data-date-format="DD/MM/YYYY" type="text" class="form-control" />
                    <span class="input-group-addon"><span class="glyphicon-calendar glyphicon"></span></span>
                </div>
            </div>
            <div class="col-md-3">
                <div class="input-group date" id="datetimepickerto">
                    <input value="@ViewBag.toDate" name="toDate" placeholder="Đến ngày" data-date-format="DD/MM/YYYY" type="text" class="form-control" />
                    <span class="input-group-addon"><span class="glyphicon-calendar glyphicon"></span></span>
                </div>
            </div>
            <div class="col-md-1">
                <button id="submit-search" class="btn btn-danger" type="submit"><span class="glyphicon glyphicon-search"></span> Tìm kiếm</button>
            </div>
            <div class="col-md-3">
            </div>
        </div>
    </form>
</div>

<div class="row" style="margin-top: 30px">
    <div class="col-md-3">
        <div class="btn-group" data-toggle="buttons">
            <label class="btn btn-default disabled">
                <input style="color: black" type="radio" name="options" id="option2" autocomplete="off">Sắp xếp theo
            </label>
            @if (ViewBag.optionorder == "asc")
            {
                <label id="sortA-Z" class="btn btn-danger active">
                    <input type="radio" name="options" autocomplete="off">A <span class="glyphicon glyphicon-arrow-right"></span> Z
                </label>
            }
            else
            {
                <label id="sortA-Z" class="btn btn-danger">
                    <input type="radio" name="options" autocomplete="off">A <span class="glyphicon glyphicon-arrow-right"></span> Z
                </label>
            }
            @if (ViewBag.optionorder == "desc")
            {
                <label id="sortZ-A" class="btn btn-danger active">
                    <input type="radio" name="options" autocomplete="off">Z <span class="glyphicon glyphicon-arrow-right"></span> A
                </label>
            }
            else
            {
                <label id="sortZ-A" class="btn btn-danger">
                    <input type="radio" name="options" autocomplete="off">Z <span class="glyphicon glyphicon-arrow-right"></span> A
                </label>
            }

        </div>
    </div>
    <div class="col-md-5">
        <div class="input-group">
            <input value="@ViewBag.keyword" type="text" placeholder="Nhập điều kiện lọc" id="keywordinput" class="form-control" />
            <div class="input-group-btn" id="select-filter">
                <a id="filter-by" href="#" style="width: 152px; -ms-border-radius: 0!important; border-radius: 0!important;text-align: left;" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Chọn điều kiện lọc <span style="position: relative;top: 9px" class="caret pull-right"></span></a>
                <ul class="dropdown-menu" id="drop-math">
                    <li><a href="#">Lớn hơn</a></li>
                    <li><a href="#">Nhỏ hơn</a></li>
                    <li><a href="#">Chứa giá trị</a></li>
                    <li><a href="#">Bằng giá trị hiện tại</a></li>
                </ul>
                <button id="loc" class="btn btn-danger" type="submit"><span class="glyphicon glyphicon-transfer"></span> Lọc</button>
                <button id="locngoaitru" style="margin-left: 3px;" class="btn btn-danger" type="submit"><span class="glyphicon glyphicon-transfer"></span> Lọc ngoại trừ</button>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div id="gr-right">
            <a href="@Url.Action("ExportInvoice","Reconcile")" class="btn btn-danger"><span class="glyphicon glyphicon-circle-arrow-right"></span> Xuất hóa đơn</a>
            <a class="btn btn-danger"><span class="glyphicon glyphicon-print"></span> In</a>
            <a class="btn btn-danger"><span class="glyphicon glyphicon-export"></span> Kết xuất</a>
        </div>
    </div>
</div>
<p></p>
@if (!string.IsNullOrEmpty(ViewBag.Msg))
{
    <div class="alert alert-dismissable alert-warning">
        <button type="button" class="close" data-dismiss="alert">×</button>
        @Html.Raw(ViewBag.Msg)
    </div>
}
<div class="table-responsive">
    <table id="reconcile" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th style="width: 50px!important">
                    STT
                </th>
                <th class="select-checkbox" style="width: 50px!important">
                    <input title="Chọn/Bỏ Chọn" type="checkbox" />
                </th>
                <th style="width: 50px!important"></th>
                <th class="column-select" id="OrderNo" style="width: 150px!important">
                    Mã ĐH
                </th>
                <th class="column-select" id="PaidDate">
                    Ngày ghi DT
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                int count = 0;
            }
            @foreach (var item in Model)
            {
                count++;
                <tr id="@item.OrderNo">
                    <td>
                        @count
                    </td>
                    <td class="select-checkbox">
                        @{
                if (listChecked != null && listChecked.Contains(item.ReconcileKey.ToString()))
                {
                    <input checked="checked" type="checkbox" value="@item.ReconcileKey" />
                }
                else
                {
                    <input type="checkbox" value="@item.ReconcileKey" />
                }
                        }
                    </td>
                    <td><i class="glyphicon glyphicon-plus" onclick="findDetail('@item.ReconcileKey');" data-toggle="collapse" data-target=".row-@item.ReconcileKey"></i></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaidDate)
                    </td>
                </tr>
                <tr class="row-@item.ReconcileKey collapse">
                    @Html.Action("InvoiceProd", "Reconcile", new { reconcileKey = item.ReconcileKey })
                </tr>

            }
        </tbody>
    </table>
</div>
@{
    var tRVD = new RouteValueDictionary(ViewContext.RouteData.Values);
    foreach (string key in Request.QueryString.Keys)
    {
        if (key != "pageIndex")
        {
            tRVD[key] = Request.QueryString[key].ToString();
        }
    }

}

@Html.Partial("_Pager", new Pager { CurrentPage = pageIndex, ValueDictionary = tRVD })

<input type="text" class="form-control" id="datetimepicker2">
@section scripts
{
    <script src="~/Scripts/function-helper.js"></script>
    <script>
        //default column order by
        $("#keywordinput").change(function () {
            $("#keyword").val($("#keywordinput").val());
        });

        //set icon expand
        $("i").click(function () {
            if ($(this).hasClass("glyphicon-plus")) {
                $(this).removeClass("glyphicon-plus");
                $(this).addClass("glyphicon-minus");
            } else if ($(this).hasClass("glyphicon-minus")) {
                $(this).removeClass("glyphicon-minus");
                $(this).addClass("glyphicon-plus");
            }
        });

        function findDetail(id) {
            //count column, column > 0 => co san pham chi tiet
            if ($(".row-" + id).find("td").length == 0) {
                $(".row-" + id).html('<td colspan="5"><p class="text-danger">Không có sản phẩm nào.</p></td>');
            }
        }
        $('#datetimepickerfrom').datetimepicker({ pickTime: false });
        $('#datetimepickerto').datetimepicker({ pickTime: false });

        var tempforremove = "";
        //select check box all in page
        $("th.select-checkbox input").on('click', function () {
            var str = "";
            //check all checkbox td
            if ($(this).is(':checked')) {
                $("td.select-checkbox input").prop("checked", true);
            } else {
                $("td.select-checkbox input").prop("checked", false);
            }
            $(".select-checkbox input:checked").each(function () {
                str += $(this).val() + ',';
                tempforremove = str;
            });
            //check and call method
            if ($(this).is(':checked')) {
                saveStateCheckBox(str, 'add'); //add to session
            } else {
                saveStateCheckBox(tempforremove, 'remove'); //remove frm session
            }
        });

        //event filter
        var urlCurrent = window.location.href;
        //var url2 = location.search.substring(1);
        $("#sortA-Z").on('click', function () {
            $("#optionorder").val("asc");
            submitForm();
        });

        $("#sortZ-A").on('click', function () {
            $("#optionorder").val("desc");
            submitForm();
        });

        function appendForFilter(param, doact) {
            var urlRequest = 'http://' + location.host + '/Reconcile/CheckedList';
            $.ajax({
                type: "GET",
                url: urlRequest,
                data: { listArray: param, doact: doact },
                dataType: "text",
                success: function (response) {
                    //alert(response);
                },
                error: function () {
                    alert('error');
                }

            });
        }

        //select single checkbox
        $("td.select-checkbox input").on('click', function () {
            //check and call method
            if ($(this).is(':checked')) {
                saveStateCheckBox($(this).val(), 'add'); //add to session
            } else {
                saveStateCheckBox($(this).val(), 'remove'); //remove frm session
            }
        });

        function saveStateCheckBox(param, doact) {
            var urlRequest = 'http://' + location.host + '/Reconcile/CheckedList';
            $.ajax({
                type: "GET",
                url: urlRequest,
                data: { listArray: param, doact: doact },
                dataType: "text",
                success: function (response) {
                    //alert(response);
                },
                error: function () {
                    alert('error');
                }

            });
        }

        //highlight select
        $("th.column-select").on('click', function () {
            //clean
            $("th").each(function () {
                $(this).removeAttr('column-selected');
                $(this).css({ "background": "white", "color": "#666666" });
            });
            $(this).attr('column-selected', 'yes');
            $(this).css({ "background": "#e51c23", "color": "white" });
            $("#columnfilter").val($(this).attr('id'));
            $("#orderbycolumn").val($(this).attr('id'));
            //buidArray('columnfilter', 'orderbycolumn');
            //window.location = '/Report?' + buidArray('orderbycolumn', $(this).attr('id'));

            //if ($(this).attr('column-selected') == 'yes') {
            //    $(this).attr('column-selected', 'no');
            //    $(this).css({ "background": "white", "color": "black" });
            //} else {
            //    $(this).attr('column-selected', 'yes');
            //    $(this).css({ "background": "seagreen", "color": "white" });
            //}
        });
        //khi chon filter se set gia tri vao textbox
        $("#select-filter .dropdown-menu li a").on('click', function () {
            var text = $(this).text();
            $("#select-filter a#filter-by").html(text + ' <span style="position: relative;top: 9px" class="caret pull-right">');
            switch (text) {
                case 'Lớn hơn':
                    $("#mathfilter").val("morethan");
                    break;
                case 'Nhỏ hơn':
                    $("#mathfilter").val("lessthan");
                    break;
                case 'Chứa giá trị':
                    $("#mathfilter").val("contains");
                    break;
                case 'Bằng giá trị hiện tại':
                    $("#mathfilter").val("equals");
                    break;
                default:
            }
        });
        //load default gia tri filter
        $(function () {
            $("#" + $("#columnfilter").val()).trigger('click'); //load column filter if exist value
            switch ($("#mathfilter").val()) {
                case 'morethan':
                    $("#filter-by").text("Lớn hơn");
                    break;
                case 'lessthan':
                    $("#filter-by").text("Nhỏ hơn");
                    break;
                case 'contains':
                    $("#filter-by").text("Chứa giá trị");
                    break;
                case 'equals':
                    $("#filter-by").text("Bằng giá trị hiện tại");
                    break;
                default:
                    $("#filter-by").val("Chọn điều kiện lọc");
            }
        });

        //button loc and loc ngoai tru
        $("#loc").on('click', function () {
            submitForm();
        });
        $("#locngoaitru").on('click', function () {
            switch (text) {
                case 'Lớn hơn':
                    $("#filter-by").text("Nhỏ hơn");
                    $("#mathfilter").val("lessthan");
                    break;
                case 'Nhỏ hơn':
                    $("#filter-by").text("Lớn hơn");
                    $("#mathfilter").val("morethan");
                    break;
                case 'Chứa giá trị':
                    $("#filter-by").text("Không chứa giá trị");
                    $("#mathfilter").val("notequals");
                    break;
                case 'Bằng giá trị hiện tại':
                    $("#filter-by").text("Không bằng giá trị");
                    $("#mathfilter").val("notequals");
                    break;
                default:
            }
            submitForm();
        });

        function submitForm() {
            $("#submit-search").trigger('click');
        }

    </script>
}
<style>
    table#reconcile th.column-select:hover {
        cursor: pointer;
        background-color: #e51c23 !important;
        color: white !important;
    }

    div#gr-right a {
        float: right;
        margin-left: 3px;
        top: 1px;
        position: relative;
    }

    table .collapse.in {
        display: table-row;
    }

    td i:hover {
        cursor: pointer;
        color: red;
    }
</style>
